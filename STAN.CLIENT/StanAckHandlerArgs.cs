// Copyright 2015-2018 The NATS Authors
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
using System;

namespace STAN.Client
{
    /// <summary>
    /// This class is used with an acknowledgement event handler indicating 
    /// a message has been acknoweledged by the STAN server.
    /// </summary>
    public class StanAckHandlerArgs : EventArgs
    {
        private string guid;
        private string error;

        private StanAckHandlerArgs() { }

        /// <summary>
        /// Constructor for generating StanConnLostHandler arguments.  Used only for application unit testing.
        /// </summary>
        /// <remarks>
        /// Objects of this type are normally generated internally by the NATS streaming client.
        /// This constructor has been provided to facilitate application unit testing.
        /// </remarks>
        /// <param name="guid">Message GUID</param>
        /// <param name="error">An error generated by the NATS streaming server.</param>
        public StanAckHandlerArgs(string guid, string error)
        {
            this.guid = guid;
            this.error = error;
        }

        /// <summary>
        /// Contains the GUID of the acknowledged message.
        /// </summary>
        public string GUID
        {
            get
            {
                return guid;
            }
        }

        /// <summary>
        /// Returns an error if applicable.
        /// </summary>
        public string Error
        {
            get
            {
                return this.error;
            }
        }
    }
}
